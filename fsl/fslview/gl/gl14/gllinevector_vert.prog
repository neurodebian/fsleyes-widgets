!!ARBvp1.0
#
# Vertex program for rendering GLLineVector instances.
#
# Inputs:
#    state.matrix.mvp - MVP transformation matrix
#    vertex.position  - Vertex position in the voxel coordinate system.
# 
#    program.local[0] - (first three components) inverse of image shape
#
# Outputs:
#    result.position    - the vertex position
#    result.texcoord[0] - the texture coordinates
#    result.texcoord[1] - the voxel coordinates
#

TEMP texCoord;

PARAM invImageShape = program.local[0];

# Transform the vertex position (which is in voxel
# coordinates) into display coordinates.  It is
# assumed that a voxel->display transformation has
# been encoded into the mvp matrix.
DP4 result.position.x, state.matrix.mvp.row[0], vertex.position;
DP4 result.position.y, state.matrix.mvp.row[1], vertex.position;
DP4 result.position.z, state.matrix.mvp.row[2], vertex.position;
DP4 result.position.w, state.matrix.mvp.row[3], vertex.position;

# Transform the vertex coordinates
# into integer voxel coordinates
MOV texCoord, vertex.position;
ADD texCoord, texCoord, { 0.5, 0.5, 0.5, 0.0 };
FLR texCoord, texCoord;

MOV result.texcoord[1], texCoord;

# Transform those integer voxel
# coordinates into texture coordinates
ADD texCoord, texCoord, { 0.5, 0.5, 0.5, 0.0 };
MUL texCoord, texCoord, invImageShape;

MOV result.texcoord[0], texCoord;

END
