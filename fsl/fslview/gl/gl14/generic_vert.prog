!!ARBvp1.0
#
# Vertex program used for rendering GLObject instances.
#
# This vertex program does three things:
#
#  - Transforms vertex coordinates from display coordinates into screen
#    coordinates.
#
#  - Transforms vertex coordinates from display coordinates into voxel
#    coordinates.
#
#  - Sets the vertex texture coordinate from its display coordinates.
#
# Required inputs:
#
#   state.matrix.mvp - Matrix which transforms from the display coordinate
#                      system to the screen coordinate system.
#
#   program.local[0]
#   program.local[1]
#   program.local[2]
#   program.local[3] - Matrix which transforms from the display coordinate
#                      system to the image voxel coordinate system.
#
# Outputs:
#
#   result.position    - vertex position in the screen coordinate system
#   result.texcoord[0] - vertex position in the display coordinate system
#   result.texcoord[1] - vertex position in the image voxel coordinate system
#
# Author: Paul McCarthy <pauldmccarthy@gmail.com>
#

TEMP vertexScreenPos;
TEMP vertexVoxelPos;

PARAM dispToScreenMat[4] = { state.matrix.mvp };
PARAM dispToVoxMat[   4] = { program.local[0],
                             program.local[1],
                             program.local[2],
                             program.local[3] };

# Transform the vertex position
# from display coordinates to
# screen coordinates
DP4 vertexScreenPos.x, dispToScreenMat[0], vertex.position;
DP4 vertexScreenPos.y, dispToScreenMat[1], vertex.position;
DP4 vertexScreenPos.z, dispToScreenMat[2], vertex.position;
DP4 vertexScreenPos.w, dispToScreenMat[3], vertex.position;

# Transform the vertex position
# from display coordinates to
# voxel coordinates
DP4 vertexVoxelPos.x, dispToVoxMat[0], vertex.position;
DP4 vertexVoxelPos.y, dispToVoxMat[1], vertex.position;
DP4 vertexVoxelPos.z, dispToVoxMat[2], vertex.position;
DP4 vertexVoxelPos.w, dispToVoxMat[3], vertex.position;

# Offset voxel coordinates by 0.5 
# so they are centred within a voxel.
# See comments in gl21/generic_vert.glsl
# for an explanation.
ADD vertexVoxelPos, vertexVoxelPos, { 0.5, 0.5, 0.5, 0.0 };

# Write the outputs
MOV result.position,    vertexScreenPos;
MOV result.texcoord[0], vertex.position;
MOV result.texcoord[1], vertexVoxelPos;

END
